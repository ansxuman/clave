name: Build Release

permissions:
  contents: write
  actions: write

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      release_url:
        description: 'Release upload URL'
        required: true

jobs:
  build-macos:
    name: Build macOS
    runs-on: macos-latest
    environment: Prod
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true
        
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Wails Dependencies
        run: |
          mkdir -p ../github
          cd ../github
          git clone https://github.com/wailsapp/wails.git
          cd wails
          git checkout v3-alpha
          cd v3/cmd/wails3
          go install
          cd ../../../..

      - name: Update go.mod
        run: |
          sed -i '' 's|../wails/v3|../github/wails/v3|g' go.mod

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v3
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      - name: Build and Sign Release Binaries
        run: |
          mkdir -p darwinBinaries
          wails3 doctor
          wails3 task common:update:build-assets
          wails3 package
          
          # Store signing identity in a variable with proper quoting
          SIGN_IDENTITY="${{ secrets.APPLE_SIGNING_IDENTITY }}"
          VERSION="${{ github.event.release.tag_name }}"
          
          # Sign the binary
          codesign --deep --force --verbose --options=runtime --sign "$SIGN_IDENTITY" bin/Clave.app/Contents/MacOS/Clave
          
          # Sign the app bundle
          codesign --deep --force --verbose --options=runtime --sign "$SIGN_IDENTITY" bin/Clave.app
          
          # Create DMG
          npm install --global create-dmg
          create-dmg bin/Clave.app --dmg-title "Clave-${VERSION}"
          
          # Process and sign DMG
          cd bin
          # Use the actual filename format that create-dmg generates
          CLEAN_VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          mv "Clave ${CLEAN_VERSION}.dmg" "../darwinBinaries/Clave-${VERSION}-arm64.dmg"
          echo "arm64DMGPath=darwinBinaries/Clave-${VERSION}-arm64.dmg" >> $GITHUB_ENV
          
          cd ..
          ls -alh darwinBinaries

      - name: Notarize Release Binaries
        run: |
          xcrun notarytool submit ${{ env.arm64DMGPath }} --apple-id ${{ secrets.MACOS_SIGNING_GON_USERNAME }} --team-id ${{secrets.APPLE_DEVELOPER_TEAM_ID}} --password ${{ secrets.MACOS_SIGNING_GON_APPLICATION_PASSWORD }} --verbose --wait 
          xcrun stapler staple ${{ env.arm64DMGPath }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event_name == 'workflow_dispatch' && inputs.release_url || github.event.release.upload_url }}
          asset_path: ${{ env.arm64DMGPath }}
          asset_name: Clave-${{ github.event.release.tag_name }}-arm64.dmg
          asset_content_type: application/x-apple-diskimage

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Wails Dependencies
        shell: cmd
        run: |
          mkdir ..\github
          cd ..\github
          git clone https://github.com/wailsapp/wails.git
          cd wails
          git checkout v3-alpha
          cd v3\cmd\wails3
          go install
          cd ..\..\..\..

      - name: Update go.mod
        shell: pwsh
        run: |
          (Get-Content go.mod) -replace '../wails/v3', '../github/wails/v3' | Set-Content go.mod

      - name: Build Release Binaries
        shell: pwsh
        run: |
          mkdir windowsBinaries
          wails3 doctor
          wails3 task common:update:build-assets
          wails3 package

          Move-Item -Path "bin\Clave-amd64-installer.exe" -Destination "windowsBinaries\Clave-Setup-${{ github.event.release.tag_name }}-x64.exe"
          echo "WINDOWS_INSTALLER_PATH=windowsBinaries/Clave-Setup-${{ github.event.release.tag_name }}-x64.exe" >> $env:GITHUB_ENV

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event_name == 'workflow_dispatch' && inputs.release_url || github.event.release.upload_url }}
          asset_path: ${{ env.WINDOWS_INSTALLER_PATH }}
          asset_name: Clave-Setup-${{ github.event.release.tag_name }}-x64.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev gcc libgtk-3-dev pkg-config

      - name: Setup Wails Dependencies
        run: |
          mkdir -p ../github
          cd ../github
          git clone https://github.com/wailsapp/wails.git
          cd wails
          git checkout v3-alpha
          cd v3/cmd/wails3
          go install
          cd ../../../..

      - name: Update go.mod
        run: |
          sed -i 's|../wails/v3|../github/wails/v3|g' go.mod

      - name: Build Release Binaries
        run: |
          mkdir -p linuxBinaries
          wails3 doctor
          wails3 task common:update:build-assets
          wails3 package
          
          mv bin/clave-x86_64.AppImage "linuxBinaries/clave_${{ github.event.release.tag_name }}_amd64.AppImage"
          echo "LINUX_APP_PATH=linuxBinaries/clave_${{ github.event.release.tag_name }}_amd64.AppImage" >> $GITHUB_ENV
          
          ls -alh linuxBinaries

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event_name == 'workflow_dispatch' && inputs.release_url || github.event.release.upload_url }}
          asset_path: ${{ env.LINUX_APP_PATH }}
          asset_name: clave_${{ github.event.release.tag_name }}_amd64.AppImage
          asset_content_type: application/x-executable