name: MacOS Release

permissions:
  contents: write
  pull-requests: read

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release (e.g., 1.1.0)'
        required: true

jobs:
  release:
    name: Create Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Get Merged PR Details
        id: changelog
        run: |
          CHANGES=$(gh pr list --repo ${{ github.repository }} --state merged --json title,author,number --jq '.[] | "* " + .title + " (#" + (.number|tostring) + ") by @" + .author.login' | tr '\n' '\n')
          echo "changes<<EOF" >> $GITHUB_ENV
          echo "$CHANGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          NEW_CONTRIBUTORS=$(gh pr list --repo ${{ github.repository }} --state merged --json author --jq '.[] | .author.login' | sort -u | while read -r user; do
            echo "* [@$user](https://github.com/$user)"
          done)
          echo "new_contributors<<EOF" >> $GITHUB_ENV
          echo "$NEW_CONTRIBUTORS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          ALL_CONTRIBUTORS=$(gh pr list --repo ${{ github.repository }} --state merged --json author --jq '.[] | .author.login' | sort -u)
          CONTRIBUTOR_COUNT=$(echo "$ALL_CONTRIBUTORS" | wc -l | tr -d ' ')
          CONTRIBUTOR_LIST=$(echo "$ALL_CONTRIBUTORS" | tr '\n' ',' | sed 's/,/, /g' | sed 's/, $//')
          
          echo "contributor_summary<<EOF" >> $GITHUB_ENV
          echo "$ALL_CONTRIBUTORS" | while read -r user; do
            echo "@$user"
          done
          echo "EOF" >> $GITHUB_ENV
          
          if [ "$CONTRIBUTOR_COUNT" -gt 2 ]; then
            FIRST_TWO=$(echo "$CONTRIBUTOR_LIST" | cut -d',' -f1,2)
            OTHERS=$((CONTRIBUTOR_COUNT - 2))
            echo "contributor_text=$FIRST_TWO, and $OTHERS other contributors" >> $GITHUB_ENV
          else
            echo "contributor_text=$CONTRIBUTOR_LIST" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
        
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Wails Dependencies
        run: |
          mkdir -p ../github
          cd ../github
          git clone https://github.com/wailsapp/wails.git
          cd wails
          git checkout v3-alpha
          cd v3/cmd/wails3
          go install
          cd ../../../..
          pwd
          ls -la

      - name: Update go.mod
        run: |
          sed -i '' 's|../../Project/github/wails/v3|../github/wails/v3|g' go.mod
          cat go.mod

      - name: Build Release Binaries
        run: |
          mkdir -p darwinBinaries
          wails3 package
          zip -r Clave.zip bin/Clave.app
          mv Clave.zip darwinBinaries/

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "Version v${{ github.event.inputs.version }}"
          body: |
            ## ðŸš€ What's Changed

            ${{ env.changes }}

            ## ðŸ‘¥ New Contributors

            Thank you to our new contributors! ðŸŽ‰

            ${{ env.new_contributors }}

            ## ðŸ‘¥ Contributors

            ${{ env.contributor_summary }}

            ${{ env.contributor_text }}

            ## ðŸ“¦ Assets
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: darwinBinaries/Clave.zip
          asset_name: Clave-macos.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}